version: "3.8"

services:
  fastapi-server:
    build: ./fastapi-tutor
    command: sh -c "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./fastapi-tutor:/app/fastapi-tutor
    ports:
      - 8000:8000
    networks:
      - app-network
    env_file:
      - ./.env
    depends_on:
      - redis

  node-server:
    build: ./nodejs-integrator
    volumes:
      - ./nodejs-integrator:/app/nodejs-integrator
    ports:
      - 3000:3000
    networks:
      - app-network
    env_file:
      - ./.env
    depends_on:
      - postgresdb
      - redis
    environment:
      - DB_HOST=postgresdb
    hostname: node-server

  react-server:
    build: ./react-admin-app
    volumes:
      - ./react-admin-app:/react-admin-app
    ports:
      - 3001:3001
    networks:
      - app-network
    env_file:
      - ./.env
    depends_on:
      - node-server
    environment:
      - REACT_APP_API_URL=http://node-server:3000/

  postgresdb:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    env_file:
      - ./.env
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d thabo-chatbot-db"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis
    container_name: redis
    networks:
      - app-network
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
